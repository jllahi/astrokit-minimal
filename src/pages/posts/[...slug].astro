---
import { getCollection, getEntry, type CollectionEntry } from 'astro:content'
// import { YouTube } from 'astro-embed'
import Prose from '@/components/content/Prose.astro'
import TableContents from '@/components/content/TableContents.astro'
// import Tags from '@/components/content/Tags.astro.txt'
import { componentsEmbed } from '@/components/embed/ComponentsEmbed'
import ImageKit from '@/components/embed/ImageKit.astro'
// import LikeButton from '@/components/likes/like-button'
import Article from '@/components/Article.astro'
import Link from '@/components/Link.astro'
import Title from '@/components/Title.astro'
import DataDump from '@/components/utils/DataDump.astro'
import DateFormat from '@/components/utils/DateFormat.astro'
import SocialShare from '@/components/utils/SocialShare.astro'
import { SITE } from '@/data/config'
import Layout from '@/layouts/Layout.astro'
import postFilter from '@/utils/postFilter'
import Section from '@/components/Section.astro'

export async function getStaticPaths() {
	const posts = (await getCollection('posts')).filter(postFilter)

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}))
}

interface Props {
	post: CollectionEntry<'posts'>
}

const { post } = Astro.props
const { Content, headings } = await post.render()

const category = await getEntry(post.data.category)
---

<Layout
	seo={{
		title: post.data.title,
		description: post.data.description ?? SITE.description,
		openGraph: {
			basic: {
				title: post.data.title,
				type: 'article',
				image: post.data.image.src,
			},
		},
	}}
>
	<Section>
		<Article>
			<header>
				<Title transition:name={`post-title-${post.data.title}`}>
					{post.data.title}
				</Title>
				<p class="mb-8 text-xl">{post.data.description}</p>
			</header>

			<ImageKit src={post.data.image} alt={post.data.title} loading="eager" />

			<!-- 
		<Picture
			alt={post.data.title}
			src={post.data.image}
			class="my-4 aspect-video w-full rounded bg-gray-200 object-cover dark:bg-gray-800"
			transition:name={`post-image-${post.id}`}
			loading="eager"
			formats={['webp']}
			widths={[540, 780, 1020]}
			quality={88}
		/>
-->
			<!-- <Image
			alt={post.data.title}
			src={post.data.image}
			class="my-4 aspect-video w-full rounded bg-gray-200 object-cover dark:bg-gray-800"
			width="720"
			transition:name={`post-image-${post.data.title}`}
			loading="eager"
		/> -->

			<div class="my-2 flex flex-col justify-between md:flex-row">
				<DateFormat date={post.data.date} />
				<!-- <span>Reading time: {post.data.reading}</span> -->
				<div class="my-4 flex-wrap place-items-center gap-3 p-0 md:flex">
					<Link size="sm" intent="tag" href={`/${SITE.urls.category}/${category.slug}`}>
						{category.data.title}
					</Link>

					<!-- <Tags tags={post.data.tags} size="sm" intent="tag" /> -->
				</div>
			</div>
			<Prose>
				<TableContents {headings} />
				<!-- <Content components={{ img: ImageKit, YouTube, Spotify }} /> -->
				<Content components={componentsEmbed} />
			</Prose>

			<div class="mt-8 flex w-full flex-row justify-between">
				<!-- <LikeButton slug={post.slug} client:load /> -->
				<SocialShare description={post.data.description} title={post.data.title} via={SITE.title} />
			</div>
		</Article>
	</Section>
	<!-- <Section>
		<h2>Related</h2>
		<PostListCategory category={post.data.category} />
	</Section> -->
	<DataDump data={post} />
</Layout>
